@model CircularManagementSystem.Models.AccountPasswordModel

@{
    ViewBag.Title = "ChangePassword";
}
<div class="AddDepartment-container">
    <h2 class="title">AddDepartment</h2>
    <hr />
    @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
    {
        <div class="form">
            @if (ViewBag.Message != null)
            {
                @ViewBag.Message
            }
            <div>
                <div>
                    @Html.LabelFor(Model => Model.ExistingPassword, new { @class = "Department-label" })
                    @Html.PasswordFor(Model => Model.ExistingPassword, new { required = "required", autocomplete = "off", maxlength = 10, placeholder = "Enter Existing Password", @class = "Department-textbox" })
                    @Html.ValidationMessageFor(Model => Model.ExistingPassword, "", new { @class = "ValidUserName" })
                </div>
                <div>
                    @Html.LabelFor(Model => Model.Password, new { @class = "Department-label" })
                    @Html.PasswordFor(Model => Model.Password, new { required = "required", autocomplete = "off", maxlength = 10, placeholder = "Enter new Password", @class = "Department-textbox" })
                    @Html.ValidationMessageFor(Model => Model.Password, "", new { @class = "ValidUserName" })
                </div>
                <div>
                    @Html.LabelFor(Model => Model.ConfirmPassword, new { @class = "Department-label" })
                    @Html.TextBoxFor(Model => Model.ConfirmPassword, new { required = "required", autocomplete = "off", maxlength = 10, placeholder = "Enter new Password", @class = "Department-textbox" })
                    @Html.ValidationMessageFor(Model => Model.ConfirmPassword, "", new { @class = "ValidUserName" })
                    @Html.HiddenFor(model => model.UserName)
                </div>
                <div>
                    <input type="submit" class="submit-EditEmployee" />
                </div>
               
            </div>
            @Html.AntiForgeryToken()
        </div>
    }
</div>
